/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PIN_MUX_H_
#define _PIN_MUX_H_

/*!
 * @addtogroup pin_mux
 * @{
 */

/***********************************************************************************************************************
 * API
 **********************************************************************************************************************/

#if defined(__cplusplus)
extern "C" {
#endif

/*!
 * @brief Calls initialization functions.
 *
 */
void BOARD_InitBootPins(void);

#define IOCON_PIO_CLKDIV0 0x00u      /*!<@brief IOCONCLKDIV0 */
#define IOCON_PIO_HYS_EN 0x20u       /*!<@brief Enable hysteresis */
#define IOCON_PIO_INV_DI 0x00u       /*!<@brief Input not invert */
#define IOCON_PIO_MODE_PULLUP 0x10u  /*!<@brief Selects pull-up function */
#define IOCON_PIO_OD_DI 0x00u        /*!<@brief Disables Open-drain function */
#define IOCON_PIO_SMODE_BYPASS 0x00u /*!<@brief Bypass input filter */

/*! @name PIO0_4 (number 6), Power_Up_btn
  @{ */

/* Symbols to be used with GPIO driver */
#define BOARD_INITSWD_DEBUGPINS_powerState_GPIO GPIO                /*!<@brief GPIO peripheral base pointer */
#define BOARD_INITSWD_DEBUGPINS_powerState_GPIO_PIN_MASK (1U << 4U) /*!<@brief GPIO pin mask */
#define BOARD_INITSWD_DEBUGPINS_powerState_PORT 0U                  /*!<@brief PORT device index: 0 */
#define BOARD_INITSWD_DEBUGPINS_powerState_PIN 4U                   /*!<@brief PORT pin number */
#define BOARD_INITSWD_DEBUGPINS_powerState_PIN_MASK (1U << 4U)      /*!<@brief PORT pin mask */
                                                                    /* @} */

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitSWD_DEBUGPins(void); /* Function assigned for the Cortex-M0P */

/*! @name PIO0_4 (number 6), Power_Up_btn
  @{ */
#define BOARD_INITBUTTONSPINS_powerState_PORT 0U                  /*!<@brief PORT device index: 0 */
#define BOARD_INITBUTTONSPINS_powerState_PIN 4U                   /*!<@brief PORT pin number */
#define BOARD_INITBUTTONSPINS_powerState_PIN_MASK (1U << 4U)      /*!<@brief PORT pin mask */
                                                                  /* @} */

/*! @name PIO0_31 (number 9), S1/PIO0_31/CAPT_X0
  @{ */
#define BOARD_INITBUTTONSPINS_CAPX_PORT 0U                   /*!<@brief PORT device index: 0 */
#define BOARD_INITBUTTONSPINS_CAPX_PIN 31U                   /*!<@brief PORT pin number */
#define BOARD_INITBUTTONSPINS_CAPX_PIN_MASK (1U << 31U)      /*!<@brief PORT pin mask */
                                                             /* @} */

/*! @name PIO0_30 (number 42), S1/PIO0_30/ACMP_I5
  @{ */
#define BOARD_INITBUTTONSPINS_CAPY_R_PORT 0U                   /*!<@brief PORT device index: 0 */
#define BOARD_INITBUTTONSPINS_CAPY_R_PIN 30U                   /*!<@brief PORT pin number */
#define BOARD_INITBUTTONSPINS_CAPY_R_PIN_MASK (1U << 30U)      /*!<@brief PORT pin mask */
                                                               /* @} */

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitBUTTONsPins(void); /* Function assigned for the Cortex-M0P */

#define IOCON_PIO_CLKDIV0 0x00u      /*!<@brief IOCONCLKDIV0 */
#define IOCON_PIO_HYS_EN 0x20u       /*!<@brief Enable hysteresis */
#define IOCON_PIO_INV_DI 0x00u       /*!<@brief Input not invert */
#define IOCON_PIO_MODE_PULLUP 0x10u  /*!<@brief Selects pull-up function */
#define IOCON_PIO_OD_DI 0x00u        /*!<@brief Disables Open-drain function */
#define IOCON_PIO_SMODE_BYPASS 0x00u /*!<@brief Bypass input filter */

/*! @name PIO1_0 (number 11), en_6v
  @{ */

/* Symbols to be used with GPIO driver */
#define BOARD_INITLEDSPINS_en_6v_GPIO GPIO                /*!<@brief GPIO peripheral base pointer */
#define BOARD_INITLEDSPINS_en_6v_GPIO_PIN_MASK (1U << 0U) /*!<@brief GPIO pin mask */
#define BOARD_INITLEDSPINS_en_6v_PORT 1U                  /*!<@brief PORT device index: 1 */
#define BOARD_INITLEDSPINS_en_6v_PIN 0U                   /*!<@brief PORT pin number */
#define BOARD_INITLEDSPINS_en_6v_PIN_MASK (1U << 0U)      /*!<@brief PORT pin mask */
                                                          /* @} */

/*! @name PIO1_1 (number 14), en_3v
  @{ */

/* Symbols to be used with GPIO driver */
#define BOARD_INITLEDSPINS_en_3v_GPIO GPIO                /*!<@brief GPIO peripheral base pointer */
#define BOARD_INITLEDSPINS_en_3v_GPIO_PIN_MASK (1U << 1U) /*!<@brief GPIO pin mask */
#define BOARD_INITLEDSPINS_en_3v_PORT 1U                  /*!<@brief PORT device index: 1 */
#define BOARD_INITLEDSPINS_en_3v_PIN 1U                   /*!<@brief PORT pin number */
#define BOARD_INITLEDSPINS_en_3v_PIN_MASK (1U << 1U)      /*!<@brief PORT pin mask */
                                                          /* @} */

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitLEDsPins(void); /* Function assigned for the Cortex-M0P */

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitDEBUG_UARTPins(void); /* Function assigned for the Cortex-M0P */

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void User(void); /* Function assigned for the Cortex-M0P */

#if defined(__cplusplus)
}
#endif

/*!
 * @}
 */
#endif /* _PIN_MUX_H_ */

/***********************************************************************************************************************
 * EOF
 **********************************************************************************************************************/
